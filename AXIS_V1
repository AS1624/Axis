{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPDMCCW86/uds5JDvXOlF5R"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7iNVoB9X3sAx","executionInfo":{"status":"ok","timestamp":1703213314690,"user_tz":-540,"elapsed":12900,"user":{"displayName":"980 22-2335K","userId":"10639773485972716679"}},"outputId":"a4cc99fc-5a72-423d-c362-8bc3005ea783"},"outputs":[{"output_type":"stream","name":"stdout","text":["You: hey\n","AXIS: booting\n","You: who are you\n","AXIS: I don't know the answer. please teach me?\n","Type the answer or \"skip\" to skip:  skip\n","You: q\n","AXIS: powering down\n"]}],"source":["import json\n","from difflib import get_close_matches\n","import re\n","def save_knowledge_base(file_path: str, data: dict):\n","    jsonFile = open(file_path, \"w+\")\n","    jsonFile.write(json.dumps(data, indent = 2))\n","    jsonFile.close()\n","def get_match(question, user_question):\n","            if question in user_question:\n","              return True\n","            elif question == '\"end\": [':\n","              hardstop = 8\n","              return hardstop\n","            else:\n","              return False\n","def find_best_match(user_question: str, line, knowledge_base:dict):\n","  timer = True\n","  while timer == True:\n","    for q in knowledge_base['questions']:\n","      with open('knowledge_base.json') as f:\n","        question = f.readlines()[line]\n","        question = question.replace('      \"question\": \"',\"\")\n","        question = question.replace('\",',\"\")\n","        question = question.strip()\n","        user_question = user_question.strip()\n","        x = get_match(question, user_question)\n","        if x != 8:\n","          if x == True:\n","            with open('knowledge_base.json') as f:\n","              line=line+1\n","              answer = f.readlines()[line]\n","              answer = answer.replace('\"answer\": ',\"\")\n","              answer = answer.replace('\"',\"\")\n","              answer = answer.strip()\n","              answer =(\"AXIS: \"+ answer)\n","              timer = False\n","              return answer\n","          elif x == False:\n","            line = line+2\n","        elif x == 8:\n","          return False\n","def get_answer_for_question(question: str, knowledge_base: dict):\n","  for q in knowledge_base['questions']:\n","    with open('knowledge_base.json') as f:\n","      answer=f.readlines()[1]\n","      if answer == question:\n","        fail = 1\n","      else:\n","        fail = 0\n","      return fail\n","def AXIS():\n","  with open('knowledge_base.json','r',errors = 'ignore') as kbfile:\n","        knowledge_base = json.load(kbfile)\n","  while True:\n","    user_input:str = input('You: ')\n","    if user_input.lower() in (\"q\", \"quit\", \"shut down\", \"shutdown\", \"cancel\", \"power off\", \"poweroff\", \"power down\", \"powerdown\", \"off\", \"turn off\", \"turnoff\", \"bye\"):\n","      print(\"AXIS: powering down\")\n","      break\n","    if find_best_match(user_input,3, knowledge_base) != False:\n","      print(find_best_match(user_input, 3, knowledge_base))\n","    else:\n","      print('AXIS: I don\\'t know the answer. please teach me?')\n","      new_answer: str = input('Type the answer or \"skip\" to skip:  ')\n","      if new_answer.lower() != 'skip':\n","        knowledge_base['questions'].append({\"question\": user_input, \"answer\": new_answer})\n","        save_knowledge_base('knowledge_base.json', knowledge_base)\n","        print('AXIS: I have learned a new response!')\n","if __name__ =='__main__':\n","  active = False\n","  while active == False:\n","    user_input:str = input('You: ')\n","    if user_input.lower() in (\"wake up\",\"hey bud\",\"hey axis\", \"axis\",\"hey\"):\n","      print(\"AXIS: booting\")\n","      active = True\n","      AXIS()"]}]}